from sgrequests import SgRequests
from sglogging import SgLogSetup
from bs4 import BeautifulSoup
import time
import csv
import re

logger = SgLogSetup().get_logger("mmfoodmarket_com")

session = SgRequests()
headers = {
'authority': 'mmfoodmarket.com',
'method': 'POST',
'path': '/en/store-locator',
'scheme': 'https',
'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
'accept-encoding': 'gzip, deflate, br',
'accept-language': 'en-US,en;q=0.9',
'cache-control': 'max-age=0',
'content-length': '20388',
'content-type': 'application/x-www-form-urlencoded',
'cookie': '_ga=GA1.2.697219837.1606368631; _gcl_au=1.1.1834758421.1606368632; rsci_vid=a6fbebc1-ab32-a61e-1b9c-b4063939b573; ASP.NET_SessionId=2bkbtd5gmhfqzzp3vjyeizxj; shoppingCartId=e51c7188-ea5b-433f-85e0-a7bc7aacbc8c; _fbp=fb.1.1606368634742.1768075909; __atuvc=12%7C48%2C2%7C49%2C11%7C50%2C1%7C51; _ce.s=v11.rlc~1608173317674~v~27d6fe4d069809676729688ae024c5ba8586d45c~vv~3~ir~1~nvisits_null~1~validSession_null~1; _gid=GA1.2.2095504239.1609057213; _uetsid=578fd2f0481c11eb9365c734dfa6a58a; _uetvid=80aedb402fa811eb8f272b4c3d83b145; ABTasty=uid=187hjedcyn91326y&fst=1606847489236&pst=1608919880660&cst=1609057213208&ns=7&pvt=18&pvis=18&th=',
'origin': 'https://mmfoodmarket.com',
'referer': 'https://mmfoodmarket.com/en/store-locator',
'sec-fetch-dest': 'document',
'sec-fetch-mode': 'navigate',
'sec-fetch-site': 'same-origin',
'sec-fetch-user': '?1',
'upgrade-insecure-requests': '1',
'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36',
}

header1 = {
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36'
}


def write_output(data):
    with open("data.csv", mode="w") as output_file:
        writer = csv.writer(
            output_file, delimiter=",", quotechar='"', quoting=csv.QUOTE_ALL
        )

        # Header
        writer.writerow(
            [
                "locator_domain",
                "page_url",
                "location_name",
                "street_address",
                "city",
                "state",
                "zip",
                "country_code",
                "store_number",
                "phone",
                "location_type",
                "latitude",
                "longitude",
                "hours_of_operation",
            ]
        )
        # Body
        for row in data:
            writer.writerow(row)


def fetch_data():
    pattern = re.compile(r'\s\s+') 
    data = []
    hrs = ''
    url = 'https://mmfoodmarket.com/en/store-locator'
    state_list = ['AB', 'BC', 'MB', 'NB', 'NL', 'NW', 'NS', 'ON', 'PE', 'QC', 'SK', 'YT']
    for state in state_list:
        formdata1 = {
            'ctl25_TSSM': ';Telerik.Sitefinity.Resources, Version=12.0.7000.0, Culture=neutral,PublicKeyToken=b28c218413bdf563:en:49f0c3aa-73da-4308-80bd-c9555648caff:7a90d6a:83fa35c7;Telerik.Web.UI, Version=2019.1.115.45, Culture=neutral, PublicKeyToken=121fae78165ba3d4:en:9158ae02-bc1e-43e0-912e-ac8b68761b62:580b2269:eb8d8a8e',
    '__EVENTTARGET':'', 
    '__EVENTARGUMENT': '', 
    '__LASTFOCUS':'', 
    '__VIEWSTATE': '',
    '__VIEWSTATEGENERATOR': '6E96F86F',
    '__EVENTVALIDATION': '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',
    'fakeusernameremembered':'', 
    'fakepasswordremembered':'', 
    'ctl00$Topheader$T26E5E929115$txt_productSearch':'',
    'ctl00_CustomBreadcrumbs_ctl00_ctl00_Breadcrumb_ClientState':'', 
    'ctl00$ProductsSearch$T26E5E929063$txt_productSearch':'',
    'ctl00$content$C002$hdnLat':'',
    'ctl00$content$C002$hdnLong':'',
    'ctl00$content$C002$txtPostalCode':'', 
    'ctl00$content$C002$drpProvince': state,
    'ctl00$content$C002$drpCity': '0',
    'ctl00$content$C002$btnPFSubmit': 'Submit'
        }
        r = session.post(url, data = formdata1, headers = headers)
        soup = BeautifulSoup(r.text, "html.parser")
        loclist = soup.find("div", {"class": "store_detail"})
        datalist = loclist.findAll("div", {"class": "data"})
        for dataa in datalist:
            link = dataa.find('a')
            link = link['href']
            store = 'https://mmfoodmarket.com/en/'+ link
            p = session.get(store, headers = header1)
            soup = BeautifulSoup(p.text, "html.parser")
            locdata = soup.find("div", {"id": "content_C006_Col00"})
            title = locdata.find('h1').text
            title = title.lstrip()
            title = title.rstrip()
            address = locdata.find('p')
            address = address.get_text(strip=True, separator='|').strip()
            address = re.sub(pattern, '\n', address).split('\n')
            if (len(address) == 3):
                streetncity = address[0]
                state = address[1]
                codenphone = address[2]
    
            if (len(address) == 5):
                streetncity = address[0] + ' ' + address[1] + ' ' + address[2]
                state = address[3]
                codenphone = address[4]
                
            if (len(address) == 4):
                streetncity = address[0] + ' ' + address[1]
                state = address[2]
                codenphone = address[3]

            streetncity = streetncity.split('|')
            city = ''
            street = ''

            if (len(streetncity) == 2):
                street = streetncity[0]
                city =streetncity[1]
            if (len(streetncity) == 3):
                street = streetncity[0] + ' ' + streetncity[1]
                city = streetncity[2]
            
            city = city.rstrip(',')
            
            codenphone = codenphone.split('|')
            pcode = codenphone[0]
            phone = codenphone[1]

            hours = locdata.findAll('li')
            for days in hours:
                day = days.find("span", {"class": "store-hours-title"}).text
                hrstime = days.find("span", {"class": "store-hours-time"}).text
                time = day + ' ' + hrstime
                hrs = hrs  + time + ', '
            HOO = hrs.rstrip(', ')
            hrs = ''
            storeid = store.lstrip('https://mmfoodmarket.com/en/grocery-stores/')
            storeid = storeid.split('/')[1]

            data.append(
                [
                    "https://mmfoodmarket.com/en/store-locator",
                    store,
                    title,
                    street,
                    city,
                    state,
                    pcode,
                    "US",
                    storeid,
                    phone,
                    "<MISSING>",
                    "<MISSING>",
                    "<MISSING>",
                    HOO,
                ]
            )
    return data


def scrape():
    logger.info(time.strftime("%H:%M:%S", time.localtime(time.time())))
    data = fetch_data()
    write_output(data)
    logger.info(time.strftime("%H:%M:%S", time.localtime(time.time())))


scrape()

