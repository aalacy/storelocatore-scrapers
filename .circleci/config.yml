version: 2.1
jobs:
  check-ci-config-current:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: Check that CI configuration is current
          command: |
            source ./.circleci/lib.sh
            check_ci_config_current

  check-diffs:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: Check files in diff
          command: |
            source ./.circleci/lib.sh
            check_diffs

  python-lint-updates:
    executor: python/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - venv-{{ .Branch }}-{{ checksum "setup.py" }}
            - venv-{{ .Branch }}
      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            source ./venv/bin/activate
            pip install .[dev]
      - save_cache:
          paths:
            - venv
          key: venv-{{ .Branch }}-{{ checksum "setup.py" }}
      - run:
          name: Check formatting
          command: |
            source ./venv/bin/activate
            source ./.circleci/lib.sh
            mapfile -t UPDATED_PYTHON_FILES < <(list_updated_files | filter_python_files)
            if [ "${#UPDATED_PYTHON_FILES[@]}" -gt 0 ]; then
                black --check "${UPDATED_PYTHON_FILES[@]}" || {
                    echo "FAIL: Please run from the repo root directory:"
                    echo
                    echo "  black" "${UPDATED_PYTHON_FILES[@]}"
                    echo
                    exit 1
                }
            fi
      - run:
          name: Lint updated crawler with flake8
          command: |
            source ./venv/bin/activate
            source ./.circleci/lib.sh
            UPDATED_CRAWLER="$(get_updated_crawler)"
            if [ -n "$UPDATED_CRAWLER" ]; then
                echo "Linting $UPDATED_CRAWLER"
                cd "$UPDATED_CRAWLER" || exit 1
                flake8 --extend-ignore=E .
            fi
      - run:
          name: Lint updated Python files with flake8
          command: |
            source ./venv/bin/activate
            source ./.circleci/lib.sh
            mapfile -t UPDATED_PYTHON_FILES < <(list_updated_files | filter_python_files)
            if [ "${#UPDATED_PYTHON_FILES[@]}" -gt 0 ]; then
                flake8 --extend-ignore=I "${UPDATED_PYTHON_FILES[@]}"
            fi
      - run:
          name: Check updated Python files with mypy
          command: |
            source ./venv/bin/activate
            source ./.circleci/lib.sh
            mapfile -t UPDATED_PYTHON_FILES < <(list_updated_files | filter_python_files)
            if [ "${#UPDATED_PYTHON_FILES[@]}" -gt 0 ]; then
                mypy "${UPDATED_PYTHON_FILES[@]}"
            fi

  node-lint-updates:
    executor: node/default
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Check formatting
          command: |
            source ./.circleci/lib.sh
            mapfile -t UPDATED_NODE_FILES < <(list_updated_files | filter_node_files)
            if [ "${#UPDATED_NODE_FILES[@]}" -gt 0 ]; then
                npx prettier --check "${UPDATED_NODE_FILES[@]}" || {
                    echo "FAIL: Please run from the repo root directory:"
                    echo
                    echo "  npx prettier --write" "${UPDATED_NODE_FILES[@]}"
                    echo
                    exit 1
                }
            fi
      - run:
          name: Lint with eslint
          command: |
            source ./.circleci/lib.sh
            mapfile -t UPDATED_NODE_FILES < <(list_updated_files | filter_node_files)
            if [ "${#UPDATED_NODE_FILES[@]}" -gt 0 ]; then
                npx eslint "${UPDATED_NODE_FILES[@]}"
            fi

orbs:
  node: circleci/node@4.1.0
  python: circleci/python@1.2.1
workflows:
  check-updates:
    jobs:
      - check-ci-config-current:
          filters:
            branches:
              ignore: master
      - check-diffs:
          filters:
            branches:
              ignore: master
      - python-lint-updates:
          filters:
            branches:
              ignore: master
      - node-lint-updates:
          filters:
            branches:
              ignore: master
